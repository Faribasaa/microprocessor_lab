;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : task3 - question3
;Version :
;Date    : 12/27/2020
;Author  : Fariba Saadati
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include <alcd.h>
;
;unsigned int start_time,stop_time,start_f_time,period;
;long frequency;
;char str[16];
;
;
;void main(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0024 
; 0000 0025 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0026 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0027 
; 0000 0028 
; 0000 0029 
; 0000 002A // Timer/Counter 1 initialization
; 0000 002B // Clock source: System Clock
; 0000 002C // Clock value: 8000.000 kHz
; 0000 002D // Mode: Normal top=0xFFFF
; 0000 002E // OC1A output: Disconnected
; 0000 002F // OC1B output: Disconnected
; 0000 0030 // Noise Canceler: Off
; 0000 0031 // Input Capture on Rising Edge
; 0000 0032 // Timer Period: 8.192 ms
; 0000 0033 // Timer1 Overflow Interrupt: Off
; 0000 0034 // Input Capture Interrupt: Off
; 0000 0035 // Compare A Match Interrupt: Off
; 0000 0036 // Compare B Match Interrupt: Off
; 0000 0037 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0038 TCCR1B=(0<<ICNC1) | (1<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0039 TCNT1H=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003A TCNT1L=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003B ICR1H=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003C ICR1L=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003D OCR1AH=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 003E OCR1AL=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 003F OCR1BH=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0040 OCR1BL=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0041 
; 0000 0042 // Analog Comparator initialization
; 0000 0043 // Analog Comparator: Off
; 0000 0044 // The Analog Comparator's positive input is
; 0000 0045 // connected to the AIN0 pin
; 0000 0046 // The Analog Comparator's negative input is
; 0000 0047 // connected to the AIN1 pin
; 0000 0048 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0049 SFIOR=(0<<ACME);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 004A 
; 0000 004B // Alphanumeric LCD initialization
; 0000 004C // Connections are specified in the
; 0000 004D // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 004E // RS - PORTC Bit 0
; 0000 004F // RD - PORTC Bit 1
; 0000 0050 // EN - PORTC Bit 2
; 0000 0051 // D4 - PORTC Bit 4
; 0000 0052 // D5 - PORTC Bit 5
; 0000 0053 // D6 - PORTC Bit 6
; 0000 0054 // D7 - PORTC Bit 7
; 0000 0055 // Characters/line: 16
; 0000 0056 lcd_init(16);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0057 
; 0000 0058 while (1)
;PCODE: $0000002C VOL: 0
; 0000 0059       {
; 0000 005A       TCCR1A = 0;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005B       TCNT1=0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005C       TIFR = (1<<ICF1);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005D       TCCR1B = 0x41;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005E 
; 0000 005F         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0060         start_time = (256*ICR1H+ICR1L);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0061         TIFR = (1<<ICF1);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0062 
; 0000 0063         TCCR1B = 0x01;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0064         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0065         start_f_time = (256*ICR1H+ICR1L);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0066         TIFR = (1<<ICF1);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0067 
; 0000 0068         TCCR1B = 0x41;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0069         while ((TIFR&(1<<ICF1)) == 0);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 006A         stop_time = (256*ICR1H+ICR1L);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006B         TIFR = (1<<ICF1);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006C 
; 0000 006D         TCCR1B = 0;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 006E 
; 0000 006F 		if(start_time < stop_time)
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0070 		{
; 0000 0071 			period = stop_time - start_time;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0072 
; 0000 0073 			frequency= 8000000UL/period;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0074             sprintf(str,"%d (Hz)", (int)frequency);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0075 
; 0000 0076             lcd_clear();
;PCODE: $00000082 VOL: 0
; 0000 0077             lcd_gotoxy(2,0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0078 			lcd_puts("Frequency :");
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0079             lcd_gotoxy(4,1);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 007A             lcd_puts(str);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 007B 		}
; 0000 007C 
; 0000 007D         delay_ms(500);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 007E 
; 0000 007F       }
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0080 }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0

	.DSEG
_0x10:
	.BYTE 0xC
