;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :  task3 - question3
;Version :
;Date    : 12/28/2020
;Author  :  Fariba Saadati
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;#include <alcd.h>
;#define ICP1 PIND.6
;
;unsigned char counter;
;unsigned int start_time, stop_time, period;
;long frequency;
;char str[16];
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026 
; 0000 0027  ++ counter;
;PCODE: $0000000F VOL: 0
; 0000 0028 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// Timer1 input capture interrupt service routine
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0000 002C {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002D 
; 0000 002E TCCR1B^= (1<<ICES1);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002F 
; 0000 0030 stop_time = 256*ICR1H + ICR1L;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0031 period = (unsigned long)stop_time
; 0000 0032 + ((unsigned long)counter * 65536)
; 0000 0033 - (unsigned long)start_time;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0034 frequency = 1000000UL/period;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0035 counter = 0;
;PCODE: $0000002B VOL: 0
; 0000 0036 start_time = stop_time;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0037 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;void main(void)
; 0000 003A {
;PCODE: $00000031 VOL: 0
; 0000 003B 
; 0000 003C // Port C initialization
; 0000 003D DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003E PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003F 
; 0000 0040 // Port D initialization
; 0000 0041 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0042 PORTD=(0<<PORTD7) | (1<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0043 
; 0000 0044 
; 0000 0045 
; 0000 0046 // Timer/Counter 1 initialization
; 0000 0047 // Clock source: System Clock
; 0000 0048 // Clock value: 1000.000 kHz
; 0000 0049 // Mode: Normal top=0xFFFF
; 0000 004A // OC1A output: Disconnected
; 0000 004B // OC1B output: Disconnected
; 0000 004C // Noise Canceler: Off
; 0000 004D // Input Capture on Rising Edge
; 0000 004E // Timer Period: 65.536 ms
; 0000 004F // Timer1 Overflow Interrupt: On
; 0000 0050 // Input Capture Interrupt: On
; 0000 0051 // Compare A Match Interrupt: Off
; 0000 0052 // Compare B Match Interrupt: Off
; 0000 0053 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0054 TCCR1B=(0<<ICNC1) | (1<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0055 TCNT1H=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0056 TCNT1L=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0057 ICR1H=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0058 ICR1L=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0059 OCR1AH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 005A OCR1AL=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005B OCR1BH=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 005C OCR1BL=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 005D 
; 0000 005E 
; 0000 005F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0060 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (1<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0061 
; 0000 0062 
; 0000 0063 
; 0000 0064 // Analog Comparator initialization
; 0000 0065 // Analog Comparator: Off
; 0000 0066 // The Analog Comparator's positive input is
; 0000 0067 // connected to the AIN0 pin
; 0000 0068 // The Analog Comparator's negative input is
; 0000 0069 // connected to the AIN1 pin
; 0000 006A ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 006B SFIOR=(0<<ACME);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 006C 
; 0000 006D 
; 0000 006E // Alphanumeric LCD initialization
; 0000 006F // Connections are specified in the
; 0000 0070 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0071 // RS - PORTC Bit 0
; 0000 0072 // RD - PORTC Bit 1
; 0000 0073 // EN - PORTC Bit 2
; 0000 0074 // D4 - PORTC Bit 4
; 0000 0075 // D5 - PORTC Bit 5
; 0000 0076 // D6 - PORTC Bit 6
; 0000 0077 // D7 - PORTC Bit 7
; 0000 0078 // Characters/line: 16
; 0000 0079 lcd_init(16);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 007A 
; 0000 007B // Global enable interrupts
; 0000 007C #asm("sei")
;PCODE: $00000056 VOL: 0
	sei
;PCODE: $00000057 VOL: 0
; 0000 007D 
; 0000 007E while (1)
;PCODE: $00000058 VOL: 0
; 0000 007F       {
; 0000 0080 
; 0000 0081       sprintf(str,"%d (Hz)", (int)frequency);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0082       lcd_gotoxy(2,0);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0083 	  lcd_puts("Frequency :");
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0084       lcd_gotoxy(4,1);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0085       lcd_puts(str);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0086       }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0087       delay_ms(5000);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0088 }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0

	.DSEG
_0x6:
	.BYTE 0xC
